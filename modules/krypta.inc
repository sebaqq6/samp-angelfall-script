
stock Krypta_Init()
{
	krypta[brama_w] = CreateDynamicObject(19003, -1990.3628, -1573.0944, 90.7107, 45.0000, 90.0000, 276.0369);
	krypta[brama_z] = CreateDynamicObject(19003, -2005.6591, -1582.6787, 90.7107, 45.0000, 90.0000, 96.0440);
	SetDynamicObjectMaterial(krypta[brama_w], 0, 18647, "mattextures", "scratchedmetal", 0);
	SetDynamicObjectMaterial(krypta[brama_z], 0, 18647, "mattextures", "scratchedmetal", 0);
	SetDynamicObjectMaterial(krypta[brama_w], 1, 18647, "mattextures", "scratchedmetal", 0);
	SetDynamicObjectMaterial(krypta[brama_z], 1, 18647, "mattextures", "scratchedmetal", 0);
	krypta[lampka_c1] = CreateDynamicObject(19124, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_c2] = CreateDynamicObject(19124, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_c3] = CreateDynamicObject(19124, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_c4] = CreateDynamicObject(19124, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_z1] = CreateDynamicObject(19123, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_z2] = CreateDynamicObject(19123, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_z3] = CreateDynamicObject(19123, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[lampka_z4] = CreateDynamicObject(19123, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][0] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][1] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][2] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][3] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][4] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][5] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][6] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][7] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][8] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][9] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][10] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][11] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][12] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][13] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][14] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][15] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][16] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][17] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][18] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][19] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][20] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][21] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][22] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	krypta[gaz][23] = CreateDynamicObject(18687, -2003.1154, -1531.6017, 90.9591, 0.0000, 0.0000, 0.0);
	Krypta_WindaDol();
	return 1;
}
stock Tutorial_CreateDoors(playerid)
{
	if(pKrypta[playerid][pk_door_created]) return 1;
	pKrypta[playerid][pk_door][0] = CreateDynamicObject(1522, -2814.77, -1739.47, 2316.11, 0.0, 0.0, 90.1, _,  _, playerid);
	pKrypta[playerid][pk_door][1] = CreateDynamicObject(1522, -2837.43, -1739.48, 2323.08, 0.0, 0.0, 90.1, _,  _, playerid);
	pKrypta[playerid][pk_door][2] = CreateDynamicObject(1522, -2847.05, -1739.48, 2323.08, 0.0, 0.0, 90.1, _,  _, playerid);
	pKrypta[playerid][pk_door][3] = CreateDynamicObject(1522, -2852.54, -1729.72, 2323.08, 0.0, 0.0, 0.1, _,  _, playerid);
	pKrypta[playerid][pk_door][4] = CreateDynamicObject(1522, -2852.63, -1721.85, 2323.08, 0.0, 0.0, 0.4, _,  _, playerid);
	SetDynamicObjectMaterial(pKrypta[playerid][pk_door][0], 0, 1649, "wglass", "carshowwin2");
	SetDynamicObjectMaterial(pKrypta[playerid][pk_door][1], 0, 1649, "wglass", "carshowwin2");
	SetDynamicObjectMaterial(pKrypta[playerid][pk_door][2], 0, 1649, "wglass", "carshowwin2");
	SetDynamicObjectMaterial(pKrypta[playerid][pk_door][3], 0, 1649, "wglass", "carshowwin2");
	SetDynamicObjectMaterial(pKrypta[playerid][pk_door][4], 0, 1649, "wglass", "carshowwin2");
	pKrypta[playerid][pk_door_created] = true;
	return 1;
}
stock Tutorial_PrepareDoors(playerid)
{
	MoveDynamicObject(pKrypta[playerid][pk_door][0], -2814.77, -1739.47, 2316.11, 5000.0, 0.0, 0.0, 90.1);
	MoveDynamicObject(pKrypta[playerid][pk_door][1], -2837.43, -1739.48, 2323.08, 5000.0, 0.0, 0.0, 90.1);
	MoveDynamicObject(pKrypta[playerid][pk_door][2], -2847.05, -1739.48, 2323.08, 5000.0, 0.0, 0.0, 90.1);
	MoveDynamicObject(pKrypta[playerid][pk_door][3], -2852.54, -1729.72, 2323.08, 5000.0, 0.0, 0.0, 0.1);
	MoveDynamicObject(pKrypta[playerid][pk_door][4], -2852.63, -1721.85, 2323.08, 5000.0, 0.0, 0.0, 0.4);
	return 1;
}
stock Krypta_Close()
{
	if(krypta[brama_opened] == 0) return 1;
	krypta[brama_opened] = 2;
	//pojawianie sie czerwonych lampek
	MoveDynamicObject(krypta[lampka_c1], -1995.7263, -1572.7296, 86.9536, 5000.0, 0.0000, 0.0000, 6.1988);
	MoveDynamicObject(krypta[lampka_c2], -2001.3427, -1573.3300, 86.9536, 5000.0, 0.0000, 0.0000, 6.1988);
	MoveDynamicObject(krypta[lampka_c3], -2001.3066, -1573.3300, 94.2861, 5000.0, -0.9000, 0.0000, 5.8758);
	MoveDynamicObject(krypta[lampka_c4], -1995.7063, -1572.7296, 94.1861, 5000.0, -0.9000, 0.0000, 5.8788);
	//znikanie lampek zielonych
	MoveDynamicObject(krypta[lampka_z1],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[lampka_z2],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[lampka_z3],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[lampka_z4],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	//zamykanie bram głównych
	MoveDynamicObject(krypta[brama_w],  -1990.3153, -1573.5389, 90.7107, 1.0);
	MoveDynamicObject(krypta[brama_z],  -2005.6871, -1582.2386, 90.7107, 1.0);
	krypta[brama_w_status] = 1;
	krypta[brama_z_status] = 1;
	return 1;
}
stock Krypta_Open()
{
	if(krypta[brama_opened] == 1) return 1;
	krypta[brama_opened] = 2;
	Krypta_PokazGaz();
	//pojawianie sie zielonych lampek
	MoveDynamicObject(krypta[lampka_z1], -1995.7263, -1572.7296, 86.9536, 5000.0, 0.0000, 0.0000, 6.1988);
	MoveDynamicObject(krypta[lampka_z2], -2001.3427, -1573.3300, 86.9536, 5000.0, 0.0000, 0.0000, 6.1988);
	MoveDynamicObject(krypta[lampka_z3], -2001.3066, -1573.3300, 94.2861, 5000.0, -0.9000, 0.0000, 5.8758);
	MoveDynamicObject(krypta[lampka_z4], -1995.7063, -1572.7296, 94.1861, 5000.0, -0.9000, 0.0000, 5.8788);
	//znikanie lampek czerwonych
	MoveDynamicObject(krypta[lampka_c1],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[lampka_c2],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[lampka_c3],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[lampka_c4],  -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	//otwieranie bram głównych
	MoveDynamicObject(krypta[brama_w],  -1990.3153, -1573.5389, 90.7107, 0.2);
	MoveDynamicObject(krypta[brama_z],  -2005.6871, -1582.2386, 90.7107, 0.2);
	krypta[brama_w_status] = 3;
	krypta[brama_z_status] = 3;
	return 1;
}
stock Krypta_PokazGaz()
{
	MoveDynamicObject(krypta[gaz][0], -1996.79, -1573.08, 86.961, 5000.0, 405, 0, 90);
	MoveDynamicObject(krypta[gaz][1], -1996.23, -1573.02, 87.583, 5000.0, 45, 0, 90);
	MoveDynamicObject(krypta[gaz][2], -1995.64, -1572.95, 88.141, 5000.0, 45, 0, 90);
	MoveDynamicObject(krypta[gaz][3], -2001.27, -1573.77, 88.148, 5000.0, 45, 0, 270);
	MoveDynamicObject(krypta[gaz][4], -2000.14, -1573.64, 87.003, 5000.0, 45, 0, 630);
	MoveDynamicObject(krypta[gaz][5], -1995.85, -1582.14, 86.996, 5000.0, 45, 0, 90);
	MoveDynamicObject(krypta[gaz][6], -1995.25, -1582.08, 87.555, 5000.0, 45, 0, 450);
	MoveDynamicObject(krypta[gaz][7], -1994.69, -1582.02, 88.128, 5000.0, 45, 0, 90);
	MoveDynamicObject(krypta[gaz][8], -1999.18, -1582.71, 86.996, 5000.0, 45, 0, 270);
	MoveDynamicObject(krypta[gaz][9], -2000.34, -1582.83, 88.112, 5000.0, 45, 0, 270);
	MoveDynamicObject(krypta[gaz][10], -1994.59, -1573.07, 92.073, 5000.0, 315, 0, 90);
	MoveDynamicObject(krypta[gaz][11], -1993.98, -1573.02, 91.507, 5000.0, 315, 0, 90);
	MoveDynamicObject(krypta[gaz][12], -1993.41, -1572.95, 90.942, 5000.0, 315, 0, 90);
	MoveDynamicObject(krypta[gaz][13], -1999.76, -1582.78, 87.58, 5000.0, 45, 0, 270);
	MoveDynamicObject(krypta[gaz][14], -2002.41, -1573.66, 92.066, 5000.0, -45, 360, 270);
	MoveDynamicObject(krypta[gaz][15], -2003, -1573.7, 91.486, 5000.0, -45, 0, 630);
	MoveDynamicObject(krypta[gaz][16], -2003.57, -1573.79, 90.906, 5000.0, -45, 0, -90);
	MoveDynamicObject(krypta[gaz][17], -1993.04, -1582.07, 91.479, 5000.0, -45, 0, 90);
	MoveDynamicObject(krypta[gaz][18], -1992.5, -1582.04, 90.885, 5000.0, -45, 0, 90);
	MoveDynamicObject(krypta[gaz][19], -1993.59, -1582.13, 92.137, 5000.0, -45, 0, 90);
	MoveDynamicObject(krypta[gaz][20], -2001.47, -1582.69, 92.1, 5000.0, 315, 0, -90);
	MoveDynamicObject(krypta[gaz][21], -2002.06, -1582.77, 91.502, 5000.0, 315, 0, 270);
	MoveDynamicObject(krypta[gaz][22], -2002.58, -1582.83, 90.89, 5000.0, 315, 0, 270);
	MoveDynamicObject(krypta[gaz][23], -2000.71, -1573.7, 87.562, 5000.0, 45, 360, 630);
	return 1;
}
stock Krypta_SchowajGaz()
{
	MoveDynamicObject(krypta[gaz][0], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][1], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][2], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][3], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][4], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][5], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][6], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][7], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][8], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][9], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][10], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][11], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][12], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][13], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][14], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][15], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][16], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][17], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][18], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][19], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][20], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][21], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][22], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	MoveDynamicObject(krypta[gaz][23], -2003.1154, -1531.6017, 90.9591, 5000.0, 0.0000, 0.0000, 0.0);
	return 1;
}
stock OnKryptaGateMoved(objectid)
{
	if(objectid == krypta[brama_w])
	{
		if(krypta[brama_w_status] == 0)
		{
			krypta[brama_w_status] = 5;
		}
		else if(krypta[brama_w_status] == 1)
		{
			Krypta_PokazGaz();
			MoveDynamicObject(krypta[brama_w],  -1990.3628, -1573.0944, 90.7107, 0.2);
			krypta[brama_w_status] = 2;
		}
		else if(krypta[brama_w_status] == 3)
		{
			Krypta_SchowajGaz();
			MoveDynamicObject(krypta[brama_w],  -1979.3550, -1572.3639, 90.7107, 1.0);
			krypta[brama_w_status] = 0;
		}
		else if(krypta[brama_w_status] == 2)
		{
			krypta[brama_w_status] = 4;
			Krypta_SchowajGaz();
		}
	}
	else if(objectid == krypta[brama_z])
	{
		if(krypta[brama_z_status] == 0)
		{
			krypta[brama_z_status] = 5;
		}
		else if(krypta[brama_z_status] == 1)
		{
			Krypta_PokazGaz();
			MoveDynamicObject(krypta[brama_z],  -2005.6591, -1582.6787, 90.7107, 0.2);
			krypta[brama_z_status] = 2;
		}
		else if(krypta[brama_z_status] == 3)
		{
			Krypta_SchowajGaz();
			MoveDynamicObject(krypta[brama_z],  -2016.6777, -1583.4320, 90.7107, 1.0);
			krypta[brama_z_status] = 0;
		}
		else if(krypta[brama_z_status] == 2)
		{
			krypta[brama_z_status] = 4;
			Krypta_SchowajGaz();
		}
	}
	else if(objectid == krypta[brama_z] || objectid == krypta[brama_w])
	{
		if(krypta[brama_w_status] == 5 && krypta[brama_z_status] == 5)
		{
			krypta[brama_opened] = 1;
		}
		else if(krypta[brama_w_status] == 4 && krypta[brama_z_status] == 4)
		{
			krypta[brama_opened] = 0;
		}
	}
	else if(objectid == WINDAID)
	{
		krypta[winda_status] = 0;
	}
	return 1;
}

stock Process_KryptaGate()
{
	if(krypta[brama_opened] == 2) return 1;
	new inRange;
	for(new k = PlayerPoolSize(); k != -1; k--)
	{
		if(gracz[k][spawned])
		{
			if(IsPlayerInRangeOfPoint(k, 20.0, -1998.0808,-1578.0463,87.9510))
			{
				inRange++;
			}
		}
	}
	if(inRange) Krypta_Open();
	else Krypta_Close();
	return 1;
}

//id z db: 11062
//dół: -2354.214, -1680.277, 2489.099
//góra: -2354.214, -1680.277, 2903.651
stock Process_KryptaWinda()
{
	if(krypta[winda_status])
	{
		new Float:winda_wysokosc;
		new Float:actual_speed;
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, WINDAID, E_STREAMER_MOVE_SPEED, actual_speed);
		Streamer_GetFloatData(STREAMER_TYPE_OBJECT, WINDAID, E_STREAMER_Z, winda_wysokosc);
		if(krypta[winda_status] == 1)//porusza sie w dół
		{
			if(procent(2903.651-winda_wysokosc, 2903.651-2489.099) < 50)
			{
				actual_speed += 1.0;
				MoveDynamicObject(WINDAID, -2354.214, -1680.277, 2489.099, actual_speed, 0.0, 0.0, 0.0);
			}
			else
			{
				if(actual_speed > 1.0) actual_speed -= 1.1;
				if(actual_speed < 1.0) actual_speed = 1.0;
				MoveDynamicObject(WINDAID, -2354.214, -1680.277, 2489.099, actual_speed, 0.0, 0.0, 0.0);
			}
		}
		else if(krypta[winda_status] == 2)//porusza sie w góre
		{
			if(procent(2903.651-winda_wysokosc, 2903.651-2489.099) > 50)
			{
				actual_speed += 1.0;
				MoveDynamicObject(WINDAID, -2354.214, -1680.277, 2903.651, actual_speed, 0.0, 0.0, 0.0);
			}
			else
			{
				if(actual_speed > 1.0) actual_speed -= 1.1;
				if(actual_speed < 1.0) actual_speed = 1.0;
				MoveDynamicObject(WINDAID, -2354.214, -1680.277, 2903.651, actual_speed, 0.0, 0.0, 0.0);
			}
		}
	}
	else if(krypta[winda_delay] < 10) krypta[winda_delay]++;
	else if(krypta[winda_delay] >= 10)
	{
		if(krypta[winda_lastactivestatus] == 1) Krypta_WindaGora();
		else if(krypta[winda_lastactivestatus] == 2) Krypta_WindaDol();
	}
	return 1;
}

stock Krypta_WindaDol()
{
	if(krypta[winda_status]) return 1;
	MoveDynamicObject(WINDAID, -2354.214, -1680.277, 2489.099, 1.0, 0.0, 0.0, 0.0);
	krypta[winda_delay] = 0;
	krypta[winda_status] = 1;
	krypta[winda_lastactivestatus] = krypta[winda_status];
	return 1;
}

stock Krypta_WindaGora()
{
	if(krypta[winda_status]) return 1;
	MoveDynamicObject(WINDAID, -2354.214, -1680.277, 2903.651, 1.0, 0.0, 0.0, 0.0);
	krypta[winda_delay] = 0;
	krypta[winda_status] = 2;
	krypta[winda_lastactivestatus] = krypta[winda_status];
	return 1;
}
//**********************************************************************************************************PORADNIK KRYPTA
stock Init_tutorial(playerid)
{
	//if(gracz[playerid][sobeit_detect]) return 1;
	if(gracz[playerid][WebReg])
	{
		Tutorial_CreateDoors(playerid);
		gracz[playerid][PosX] = -2810.3577;
		gracz[playerid][PosY] = -1738.7151;
		gracz[playerid][PosZ] = 2317.5659;
		gracz[playerid][PosR] = 85.8869;
		pKrypta[playerid][pk_uid] = gracz[playerid][UID];
		pKrypta[playerid][pk_status] = 0;
		SetPlayerPos(playerid, gracz[playerid][PosX], gracz[playerid][PosY], gracz[playerid][PosZ]);
		SetPlayerFacingAngle(playerid, gracz[playerid][PosR]);
		TogglePlayerControllable(playerid, false);
		SetPlayerVirtualWorld(playerid, 100+playerid);
		SetCameraBehindPlayer(playerid);
		TextDrawShowForPlayer(playerid, black_screen);
		Tutorial_PrepareDoors(playerid);
		NapisySet(playerid, "~p~...zaczynasz slyszec...");
		SetTimerEx("Process_Tutorial", 3000, false, "dd", playerid, 1);
	}
	return 1;
}
/*1522
pozycja drzwi:
0 - close: -2814.77, -1739.47, 2316.11, 0.0, 0.0, 90.1
0 - open: -2814.77, -1740.98, 2316.11, 0.0, 0.0, 90.1
//
1 - close: -2837.43, -1739.48, 2323.08, 0.0, 0.0, 90.1
1 - open: -2837.43, -1740.97, 2323.08, 0.0, 0.0, 90.1
//
2 - close: -2847.05, -1739.48, 2323.08, 0.0, 0.0, 90.1
2 - open: -2847.05, -1740.97, 2323.08, 0.0, 0.0, 90.1
//
3 - close: -2852.54, -1729.72, 2323.08, 0.0, 0.0, 0.1
3 - open: -2854.03, -1729.72, 2323.08, 0.0, 0.0, 0.1
//
4 - close: -2852.63, -1721.85, 2323.08, 0.0, 0.0, 0.4
4 - open: -2854.12, -1721.86, 2323.08, 0.0, 0.0, 0.4
//
/mmat 0 0 0 1649 wglass carshowwin2
*/
forward Process_Tutorial(playerid, step);
public Process_Tutorial(playerid, step)
{
	if(!IsPlayerConnected(playerid)) return 1;
	if(pKrypta[playerid][pk_uid] != gracz[playerid][UID]) return 1;
	if(!step)
	{
		switch(pKrypta[playerid][pk_status])
		{
			case 1:
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, -2814.1035,-1738.7445,2317.1460))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af7.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Zanim pozwole Ci odejsc, musisz~n~przejsc kilka testow, zebym mogla ocenic~n~Twoje zdrowie fizyczne i psychiczne.");
					pKrypta[playerid][pk_status] = 0;
					SetTimerEx("Process_Tutorial", 9000, false, "dd", playerid, 7);
					LeftNotifyHide(playerid);
				}
				else
				{
					NapisySet(playerid, "_");
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 2:
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.3, -2815.6572,-1738.5909,2317.1560))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af8.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Pierwszy test. Musisz utorowac sobie droge do~n~gornej platformy, a nastepnie ja pokonac. Zaczynaj.");
					MoveDynamicObject(pKrypta[playerid][pk_door][0], -2814.77, -1739.47, 2316.11, 2.0, 0.0, 0.0, 90.1);
					pKrypta[playerid][pk_status] = 0;
					SetTimerEx("Process_Tutorial", 7000, false, "dd", playerid, 8);
					LeftNotifyHide(playerid);
					SetPlayerPos(playerid, -2815.6572,-1738.5909,2317.1560);
					TogglePlayerControllable(playerid, false);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 3:
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, -2822.2654,-1733.4137,2324.1699))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af9.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Swietnie.");
					pKrypta[playerid][pk_status] = 4;
					SetTimerEx("Process_Tutorial", 1500, false, "dd", playerid, 15);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 4:
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, -2826.1790,-1744.0469,2324.1699))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af10.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Tak trzymaj.");
					pKrypta[playerid][pk_status] = 5;
					SetTimerEx("Process_Tutorial", 1500, false, "dd", playerid, 0);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 5:
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, -2836.3428,-1738.5010,2324.0759))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af11.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~W kolejnym tescie, bedziesz w korytarzu z czterema punktami~n~w roznych kolorach. Twoim zadaniem jest stanac na ~n~ ~r~czerwonym~w~ punkcie. Zaczynaj.");
					SetTimerEx("Process_Tutorial", 1000*11, false, "dd", playerid, 9);
					LeftNotifyHide(playerid);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
					NapisySet(playerid, "_");
				}
			}
			case 6:
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.3, -2839.0750,-1738.6853,2324.0759))
				{
					MoveDynamicObject(pKrypta[playerid][pk_door][1], -2837.43, -1739.48, 2323.08, 2.0, 0.0, 0.0, 90.1);
					SetPlayerPos(playerid, -2839.0750,-1738.6853,2324.0759);
					LeftNotifyShow(playerid, "Misja", "Wykonaj to, o co Cie prosi ~p~AFIS~w~. Stan na ~r~czerwonym~w~ punkcie. ~g~Powodzenia~w~!", LN_RED, 0);
					pKrypta[playerid][pk_status] = 7;
					Process_Tutorial(playerid, 0);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 7:
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.0, -2845.7109,-1739.4722,2324.0759))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af12.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Okej, za nastepnymi drzwiami znajdziesz smakolyk.~n~ Podnies go i zjedz. Powodzenia.");
					SetTimerEx("Process_Tutorial", 1000*8, false, "dd", playerid, 10);
					LeftNotifyHide(playerid);
					new calc_vw = 100+playerid;
					for(new i = 0; i < MAX_WORLD_ITEMS; i++)
					{
						if(Przedmiot[i][i_vw] != calc_vw) continue;
						if(Przedmiot[i][Drop])
						{
							DestroyDynamicObject(Przedmiot[i][ObjectGameID]);
							Delete3DTextLabel(Przedmiot[i][Label]);
							for(new ItemEnum:r; r < ItemEnum; r++)//czyszczenie zmiennych
							{
								Przedmiot[i][r] = 0;
							}
						}
					}
					CreateItemForWorld(66, 1, 100, 100, -2851.4402, -1734.5016, 2325.0801, calc_vw);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 8:
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.3, -2848.0356,-1738.7184,2324.0859))
				{
					pKrypta[playerid][pk_status] = 9;
					MoveDynamicObject(pKrypta[playerid][pk_door][2], -2847.05, -1739.48, 2323.08, 2.0, 0.0, 0.0, 90.1);
					SetPlayerPos(playerid, -2848.0356,-1738.7184,2324.0859);
					LeftNotifyShow(playerid, "Misja", "~r~Podnies~y~ batonik~w~. ~g~Aby wyswietlic liste przedmiotow~w~ znajdujacych sie w poblizu, wcisnij klawisz ~r~N~w~.", LN_RED, 0);
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
				}
			}
			case 9..10:
			{
				if(pKrypta[playerid][pk_status] == 10)
				{

					pKrypta[playerid][pk_status] = 11;
					SetTimerEx("Process_Tutorial", 1300, false, "dd", playerid, 0);
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af13.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Tak, teraz zjedz to.");
					LeftNotifyShow(playerid, "Misja", "~r~Uzyj przedmiotu~w~. Wcisnij klawisz ~g~Y~w~, aby wyswietlic ekwipunek. Nastepnie ~b~wybierz i uzyj przedmiotu~w~.", LN_RED, 0);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 1000, false, "dd", playerid, 0);
				}
			}
			case 11, 120:
			{
				if(pKrypta[playerid][pk_status] == 120)
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af14.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Wydaje mi sie, ze Twoj mozg dziala dobrze.");
					pKrypta[playerid][pk_status] = 12;
					SetTimerEx("Process_Tutorial", 3300, false, "dd", playerid, 11);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 1000, false, "dd", playerid, 0);
					NapisySet(playerid, "_");
				}
			}
			case 12:
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.2, -2851.7883,-1728.4871,2324.0959))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af15.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Gratulacje, wynik testow jest pozytywny.~n~Wyjscie jest otwarte.");
					pKrypta[playerid][pk_status] = 13;
					SetPlayerPos(playerid, -2851.7883,-1728.4871,2324.0959);
					MoveDynamicObject(pKrypta[playerid][pk_door][3], -2852.54, -1729.72, 2323.08, 2.0, 0.0, 0.0, 0.1);
					LeftNotifyHide(playerid);
					SetTimerEx("Process_Tutorial", 5500, false, "dd", playerid, 12);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
					NapisySet(playerid, "_");
				}
			}
			case 13:
			{
				if(IsPlayerInRangeOfPoint(playerid, 1.2, -2851.8193,-1720.9342,2324.0959))
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af16.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Lepsze zycie czeka na Ciebie.");
					pKrypta[playerid][pk_status] = 14;
					SetPlayerPos(playerid, -2851.8193,-1720.9342,2324.0959);
					MoveDynamicObject(pKrypta[playerid][pk_door][4],  -2852.63, -1721.85, 2323.08, 2.0, 0.0, 0.0, 0.4);
					SetTimerEx("Process_Tutorial", 3000, false, "dd", playerid, 0);
					LeftNotifyShow(playerid, "Misja", "Podejdz do wyjscia.", LN_RED, 0);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
					NapisySet(playerid, "_");
				}
			}
			case 14..15:
			{
				if(IsPlayerInRangeOfPoint(playerid, 2.0, -2848.8943,-1720.4269,2324.3887) && pKrypta[playerid][pk_status] != 15)
				{
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af17.mp3");
					NapisySet(playerid, "~b~AFIS: ~w~Nie mozesz tam wejsc.");
					pKrypta[playerid][pk_status] = 15;
					SetTimerEx("Process_Tutorial", 2000, false, "dd", playerid, 0);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 2.0, -2854.8799,-1720.3203,2324.3887))
				{
					gracz[playerid][WebReg] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPosFade(playerid, 35, 0, -2351.0430,-1627.9812,2308.8259);
					SetPlayerFacingAngle(playerid, 190.1718);
					SetCameraBehindPlayer(playerid);
					GiveExp(playerid, 20);
					NapisySet(playerid, "_");
					mq_format("UPDATE `Konta` SET `WebReg`='%d' WHERE `id`='%d';", gracz[playerid][WebReg], gracz[playerid][UID]);
					mq_send("QEndTutorial");
					LeftNotifyShow(playerid, "Sukces!", "~g~Gratulacje~w~! Pozytywnie zdales test ~p~AFIS~w~! W tej chwili znajdujesz sie w ~b~krypcie~w~. Rozejrzyj sie po niej, i koniecznie odwiedz ~r~hale targowa~w~, to istotna lokacja gry, warto od niej ~g~zaczac~w~.", LN_GREEN, 60);
					Process_SoundTrack(playerid);
				}
				else
				{
					SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0); 
					NapisySet(playerid, "_");
				}
			}
		}
	}
	switch(step)
	{
		case 1:
		{
			NapisySet(playerid, "~b~AFIS: ~w~Puls w normie.");
			SetTimerEx("Process_Tutorial", 2800, false, "dd", playerid, 2);
			PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af1.mp3");
		}
		case 2:
		{
			NapisySet(playerid, "~b~AFIS: ~w~Poziom wapnia, chloru, magnezu, fosforu,~n~potasu, sodu, zelaza, cynku, miedzi,~n~manganu, molibdenu, jodu, fluoru,~n~selenu i chromu jest w normie.");
			SetTimerEx("Process_Tutorial", 1000*18, false, "dd", playerid, 3);
			PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af2.mp3");
		}
		case 3:
		{
			NapisySet(playerid, "~b~AFIS: ~w~Trwa wybudzanie...");
			SetTimerEx("Process_Tutorial", 1250, false, "dd", playerid, 4);
			PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af3.mp3");
			FadeColorForPlayer(playerid, 0, 0, 0, 255, 0, 0, 0, 0, 100, 1);
		}
		case 4:
		{
			SetTimerEx("Process_Tutorial", 1100, false, "dd", playerid, 5);
			TextDrawHideForPlayer(playerid, black_screen);
		}
		case 5:
		{
			NapisySet(playerid, "_");
			SetTimerEx("Process_Tutorial", 7000, false, "dd", playerid, 6);
		}
		case 6:
		{
			TogglePlayerControllable(playerid, true);
			NapisySet(playerid, "~b~AFIS: ~w~Jesli mnie slyszysz, podejdz do szklanych drzwi.");
			PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af4.mp3");
			pKrypta[playerid][pk_status] = 1;
			SetTimerEx("Process_Tutorial", 3300, false, "dd", playerid, 0);
			LeftNotifyShow(playerid, "Misja", "Podejdz do ~b~szklanych drzwi~w~.", LN_RED, 0);
		}
		case 7:
		{
			NapisySet(playerid, "_");
			MoveDynamicObject(pKrypta[playerid][pk_door][0], -2814.77, -1740.98, 2316.11, 1.0, 0.0, 0.0, 90.1);
			pKrypta[playerid][pk_status] = 2;
			Process_Tutorial(playerid, 0);
			LeftNotifyShow(playerid, "Misja", "Przejdz przez ~b~drzwi~w~.", LN_RED, 0);
		}
		case 8:
		{
			pKrypta[playerid][pk_status] = 3;
			Process_Tutorial(playerid, 0);
			NapisySet(playerid, "_");
			TogglePlayerControllable(playerid, true);
			LeftNotifyShow(playerid, "Misja", "Wykonaj to, o co Cie prosi ~p~AFIS~w~. Dostan sie do ~b~drzwi~w~ na drugim koncu pomieszczenia. ~g~Powodzenia~w~!", LN_RED, 0);
		}
		case 9:
		{
			NapisySet(playerid, "_");
			MoveDynamicObject(pKrypta[playerid][pk_door][1], -2837.43, -1740.97, 2323.08, 1.0, 0.0, 0.0, 90.1);
			pKrypta[playerid][pk_status] = 6;
			Process_Tutorial(playerid, 0);
			LeftNotifyShow(playerid, "Misja", "Przejdz przez ~b~drzwi~w~.", LN_RED, 0);
		}
		case 10:
		{
			LeftNotifyShow(playerid, "Misja", "Przejdz przez ~b~drzwi~w~.", LN_RED, 0);
			MoveDynamicObject(pKrypta[playerid][pk_door][2], -2847.05, -1740.97, 2323.08, 1.0, 0.0, 0.0, 90.1);
			pKrypta[playerid][pk_status] = 8;
			SetTimerEx("Process_Tutorial", 200, false, "dd", playerid, 0);
			NapisySet(playerid, "_");
		}
		case 11:
		{
			NapisySet(playerid, "_");
			MoveDynamicObject(pKrypta[playerid][pk_door][3], -2854.03, -1729.72, 2323.08, 1.0, 0.0, 0.0, 0.1);
			LeftNotifyShow(playerid, "Misja", "Przejdz przez ~b~drzwi~w~.", LN_RED, 0);
			Process_Tutorial(playerid, 0);
		}
		case 12:
		{
			NapisySet(playerid, "_");
			MoveDynamicObject(pKrypta[playerid][pk_door][4], -2854.12, -1721.86, 2323.08, 1.0, 0.0, 0.0, 0.4);
			LeftNotifyShow(playerid, "Misja", "Przejdz przez ~b~drzwi~w~.", LN_RED, 0);
			Process_Tutorial(playerid, 0);
		}
		case 13:
		{
			if(!gracz[playerid][WebReg]) return 1;
			switch(pKrypta[playerid][pk_sbad])
			{
				case 0:
				{
					NapisySet(playerid, "~b~AFIS: ~w~Moim zdaniem, powinienes/as sie postarac bardziej.");
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af5.mp3");
					SetTimerEx("Process_Tutorial", 3000, false, "dd", playerid, 14);
					pKrypta[playerid][pk_sbad] = 1;
				}
				case 1:
				{
					NapisySet(playerid, "~b~AFIS: ~w~Jestes uposledziony/a?");
					PlayAudioStreamForPlayer(playerid, "http://127.0.0.1/sound/af6.mp3");
					SetTimerEx("Process_Tutorial", 2000, false, "dd", playerid, 14);
					pKrypta[playerid][pk_sbad] = 0;
				}
			}
		}
		case 14:
		{
			NapisySet(playerid, "_");
		}
		case 15:
		{
			NapisySet(playerid, "_");
			Process_Tutorial(playerid, 0);
		}
	}
	return 1;
}
/*
Hey! Wake up! - Hej! Obudzić się!
I am artificial intelligence fallout shelter. In short AFIS. - Jestem sztuczną inteligencją krypty. W skrócie AFIS.
Pulse rate normal. - Puls w normie.
If you hear me, approach glass door. - Jeśli mnie słyszysz, podejdź do szklanych drzwi.
Level of calcium, chloride, magnesium, phosphorus, potassium, sodium, iron, zinc, copper, manganese, molybdenum, iodine, fluorine, selenium, chromium is in normal. - Poziom wapnia, chloru, magnezu, fosforu, potasu, sodu, żelaza, cynku, miedzi, manganu, molibdenu, jodu, fluoru, selenu, chromu jest w normie.
Appears to me, that your brain works OK. - Wydaje mi się, że Twój mózg działa dobrze.
Okay, now listen to me. - Okej, teraz mnie słuchaj.
In my opinion, you should try more. - Moim zdaniem, powinieneś/powinnaś się postarać bardziej.
I hope you are well and didn't do anything wrong yourself. - Mam nadzieję, że czujesz się dobrze i nie zrobiłeś/zrobiłaś sobie nic złego.
Your hibernation time is over. Welcome to the real world, sleepyhead. - Czas Twojej hibernacji się skończył. Witaj w prawdziwym świecie, śpiochu.
Keep going. - Tak trzymaj.
Great. - Świetnie.
Not bad. - Nieźle.
You are retarded? - Jesteś upośledzony?
First test, you have to pave the way to the top platform and then overcome it. Begin. - Pierwszy test. Musisz utorować sobie drogę do górnej platformy, a następnie ją pokonać. Zaczynaj.
Waking in progress... - Budzenie w toku...
Before I let you go, you have to pass several tests, so I could evaluate your mental and physical health. - Zanim pozwolę Ci odejść, musisz przejść kilka testów, żebym mogła ocenić Twoje zdrowie fizyczne i psychiczne.
OK, behind next doors you will find a treat. You have to raise it and eat. Good luck. - Okej, za następnymi drzwiami znajdziesz smakołyk. Podnieś go i zjedz. Powodzenia.
Better life is waiting for you. - Lepsze życie czeka na Ciebie.
Shelter will be opened in an hour. - Krypta zostanie otwarta za godzinę.
Shelter was successful open. - Krypta została pomyślnie otwarta.
Shelter was successful closed. - Krypta została pomyślnie zamknięta.
5 minutes left for shelter being closed. - Zostało pięć minut do zamknięcia krypty.
In the next test, you will be in a passageway
with four points in different colors. Your task is to stand on the RED point. Begin. - W kolejnym teście, będziesz w korytarzu z czterema punktami w różnych kolorach. Twoim zadaniem jest stanąć na CZERWONYM punkcie. Zaczynaj.
Congratulations, test results are positive. Exit opened. - Gratulacje, wynik testów jest pozytywny. Wyjście jest otwarte.
You can't enter here. - Nie możesz tam wejść.
Yes, now eat it. - Tak, teraz zjedz to.
*/
